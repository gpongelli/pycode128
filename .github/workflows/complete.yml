# SPDX-FileCopyrightText: 2023 Gabriele Pongelli
#
# SPDX-License-Identifier: MIT

# This is a basic workflow to help you get started with Actions

name: complete workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  pre-checks:
    # pre-checks does not need complex matrix, project is not built
    name: Run some checks before build
    strategy:
      matrix:
        python-versions: [ "3.11" ]
        poetry-version: [ "1.3" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # setup poetry environment without install not-yet-built package
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --with devel --sync --no-root

      - name: Lint checks with tox
        run:
          poetry run tox --skip-pkg-install --direct-yolo -e lint

      - name: Build and check documentation
        run: poetry run tox --skip-pkg-install --direct-yolo -e docs


  build-test:
    needs: pre-checks

    name: Build on ${{ matrix.os }} - py${{ matrix.python-versions }} - poetry ${{ matrix.poetry-version }}
    # The type of runner that the job will run on
    strategy:
      fail-fast: false
      matrix:
        python-versions: [ 3.8, 3.9, "3.10", "3.11" ]
        poetry-version: [ "1.3" ]
        # https://github.com/actions/runner-images list of images
        os: [ ubuntu-latest, windows-latest ] # macos-latest,
    runs-on: ${{ matrix.os }}

    outputs:
      cibw_build_version: ""

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setting python version for cibuildwheel
        uses: actions/github-script@v6
        id: set_cibuildwheel_build
        with:
          script: |
            core.setOutput('cibw_build_version', 'cp' + '${{ matrix.python-versions }}'.replaceAll(/[/.]/g, '').trim('-') + '-*');

      # configuration is inside pyproject.toml
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_BUILD: ${{ steps.set_cibuildwheel_build.outputs.cibw_build_version }}
          CIBW_TEST_COMMAND: |
            cd {project}
            poetry run tox --skip-pkg-install --direct-yolo -e py${{ matrix.python-versions }}

      - name: show temporary files
        run: |
          ls -l .
          ls -l wheelhouse

      # https://github.com/actions/upload-artifact
      # make artifacts available through jobs and into action's webpage
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      # https://github.com/codecov/codecov-action
      # Easily upload coverage reports to Codecov from GitHub Actions
      - uses: codecov/codecov-action@v3
        if: runner.os == 'Linux'
        with:
          fail_ci_if_error: true
          files: ./xml_coverage_py${{ matrix.python-versions }}.xml

  publish:
    needs: [build-test]
    name: Publish built artifacts
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        python-versions: [ "3.11" ]
        poetry-version: [ "1.3" ]
        # https://github.com/actions/runner-images list of images
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - uses: actions/download-artifact@v3
        with:
          path: ./wheelhouse

      # Build and publish documentation
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: build documentation
        run: poetry run tox --skip-pkg-install --direct-yolo -e docs

      - name: Upload Sphinx doc artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './docs/build/html'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      # https://github.com/BinPar/read-conventional-commit-changelog
      - name: Get Changelog Entry
        id: changelog
        uses: BinPar/read-conventional-commit-changelog@v2.0.2

      # https://github.com/softprops/action-gh-release
      - name: create github release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.make_gh_release_token }}
          body: ${{ steps.changelog.outputs.version-changelog }}
          files: wheelhouse/*.whl
          draft: false
          prerelease: false

      # https://github.com/pypa/gh-action-pypi-publish
      # cibuildwheel put whl under wheelhouse
      - name: publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}
          skip_existing: true
          packages_dir: ./wheelhouse/
