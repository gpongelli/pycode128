# SPDX-FileCopyrightText: 2023 Gabriele Pongelli
#
# SPDX-License-Identifier: MIT

# Publish package on main branch if it's tagged with '*.*.*'

name: release & publish workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    tags:
      - '*.*.*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "release"
  release:
    name: Create Release on ${{ matrix.os }} - py${{ matrix.python-versions }} - poetry ${{ matrix.poetry-version }}

    strategy:
      matrix:
        python-versions: [ 3.8, 3.9, "3.10", "3.11" ]
          poetry-version: [ "1.3" ]
          os: [ ubuntu-20.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # https://github.com/BinPar/read-conventional-commit-changelog
      - name: Get Changelog Entry
        id: changelog
        uses: BinPar/read-conventional-commit-changelog@v2.0.2

      # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
      - name: Install Poetry
        run: pipx install poetry==${{ matrix.poetry-version }}

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}
          cache: 'poetry'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --with devel --sync

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          # configure cibuildwheel to build native archs ('auto'), and some emulated ones
          # https://cibuildwheel.readthedocs.io/en/stable/faq/#emulation
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          # https://github.com/pypa/cibuildwheel/blob/main/examples/github-with-qemu.yml
          CIBW_ARCHS_LINUX: x86_64 i686 arm64 arm/v7
          CIBW_ARCHS_MACOS: x86_64
          CIBW_ARCHS_WINDOWS: AMD64

      - name: show temporary files
        run: |
          ls -l .
          ls -l ./wheelhouse/*

      # https://github.com/actions/upload-artifact
      # make artifacts available through jobs
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      # Build and publish documentation
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: build documentation
        run: poetry run tox --skip-pkg-install --direct-yolo -e docs

      - name: Upload Sphinx doc artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './docs/build/html'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Build wheels and source tarball
        run: >-
          poetry build

      # https://github.com/softprops/action-gh-release
      - name: create github release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.make_gh_release_token }}
          body: ${{ steps.changelog.outputs.version-changelog }}
          files: dist/*.whl
          draft: false
          prerelease: false

      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      # https://github.com/pypa/gh-action-pypi-publish
      - name: publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}
          skip_existing: true
